/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

// layers

#define DEFAULT 0
#define LOWER 1
#define MAGIC 2

/ {
    underscore_asteriskunderscore_asterisk: behaviors {
        // For the "layer" key, it'd nice to be able to use it as either a shift or a toggle.
        // Configure it as a tap dance, so the first tap (or hold) is a &mo and the second tap is a &tounderscore_asterisk: underscore_asterisk {

        compatible = "zmk,behavior-mod-morph";
        label = "UNDERSCORE_ASTERISK";
        bindings = <&kp LS(MINUS)>, <&kp LS(N8)>;

        #binding-cells = <0>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    N8_slash: N8_slash {
        compatible = "zmk,behavior-mod-morph";
        label = "N8_SLASH";
        bindings = <&kp N8>, <&kp SLASH>;

        #binding-cells = <0>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    minus_questionmark: minus_questionmark {
        compatible = "zmk,behavior-mod-morph";
        label = "MINUS_QUESTIONMARK";
        bindings = <&kp MINUS>, <&kp LS(SLASH)>;

        #binding-cells = <0>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
};

macros {
    bt_0: bt_profile_macro_0 {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings = <&out OUT_BLE &bt BT_SEL 0>;
    };

    bt_1: bt_profile_macro_1 {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings = <&out OUT_BLE &bt BT_SEL 1>;
    };

    bt_2: bt_profile_macro_2 {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings = <&out OUT_BLE &bt BT_SEL 2>;
    };

    bt_3: bt_profile_macro_3 {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings = <&out OUT_BLE &bt BT_SEL 3>;
    };
};

keymap {
    compatible = "zmk,keymap";

    default_layer {
        // ---------------------------------------------------------------------------------------------------------------------------------
        // |  F1   |  F2 |  F3 |  F4  |  F5  |                                                               |  F6   |  F7   |  F8  |   F9  |  F10 |
        // |  =    |  1  |  2  |  3   |  4   |  5   |                                                 |  6   |   7   |   8   |  9   |   0   |   -  |
        // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                                                 |  Y   |   U   |   I   |  O   |   P   |   \  |
        // |  ESC  |  A  |  S  |  D   |  F   |  G   |                                                 |  H   |   J   |   K   |  L   |   ;   |   '  |
        // |   `   |  Z  |  X  |  C   |  V   |  B   | LSHFT | LCTRL | LOWER | | LGUI  | RCTRL | RSHFT |  N   |   M   |   ,   |  .   |   /   | PGUP |
        // | MAGIC | HOME| END | LEFT | RIGHT|      | BSPC  | DEL   | LALT  | | RALT  | RET   | SPACE |      |  UP   | DOWN  |  [   |   ]   | PGDN |

        bindings = <
&kp F1               &kp F2           &kp F3     &kp F4    &kp F5                                                                                       &kp F6  &kp F7                &kp F8     &kp F9          &kp F10
&kp EQUAL            &kp N1           &kp N2     &kp N3    &kp N4     &kp N5                                                                    &kp N6  &kp N7  &N8_slash             &kp N9     &kp N0          &minus_questionmark
&kp TAB              &kp Q            &kp D      &kp R     &kp W      &kp B                                                                     &kp J   &kp F   &kp U                 &kp P      &kp SEMICOLON   &kp BSLH
&mt LEFT_ALT ESCAPE  &kp A            &kp S      &kp H     &kp T      &kp G                                                                     &kp Y   &kp N   &kp E                 &kp I      &kp APOSTROPHE  &kp ENTER
&kp LEFT_SHIFT       &kp Z            &kp X      &kp M     &kp C      &kp V   &kp HOME  &kp END  &mo 2    &kp LGUI  &kp PAGE_UP  &kp PAGE_DOWN  &kp K   &kp L   &underscore_asterisk  &kp COMMA  &kp PERIOD      &kp RIGHT_SHIFT
&kp LEFT_CONTROL     &kp PRINTSCREEN  &kp GRAVE  &kp LEFT  &kp RIGHT          &kp BSPC  &kp DEL  &mo 1    &none     &none        &kp SPACE              &kp UP  &kp DOWN              &kp LBKT   &kp RBKT        &kp RIGHT_CONTROL
        >;
    };

    lower_layer {
        bindings = <
&kp C_BRI_DN  &kp C_BRI_UP  &kp C_PREV  &kp C_NEXT  &kp C_PP                                                                                &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP   &none            &kp PAUSE_BREAK
&trans        &none         &none       &none       &none      &kp HOME                                                          &kp LPAR   &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp PSCRN
&trans        &none         &none       &kp UP      &none      &kp END                                                           &kp RPAR   &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp SLCK
&trans        &none         &kp LEFT    &kp DOWN    &kp RIGHT  &kp PG_UP                                                         &kp PRCNT  &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &none
&trans        &kp K_CMENU   &none       &kp F11     &kp F12    &kp PG_DN  &trans  &trans  &to DEFAULT    &trans  &trans  &trans  &kp COMMA  &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &trans
&trans        &kp CAPS      &kp INS     &kp F11     &kp F12               &trans  &trans  &trans         &trans  &trans  &trans             &kp KP_N0   &kp KP_N0     &kp KP_DOT     &kp KP_ENTER     &trans
        >;
    };

    magic_layer {
        bindings = <
&bt BT_CLR   &none            &none            &none            &none                                                                                       &none  &none  &none  &none  &none
&none        &none            &none            &none            &none            &none                                                               &none  &none  &none  &none  &none  &none
&none        &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_TOG                                                     &none  &none  &none  &none  &none  &none
&bootloader  &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF                                                     &none  &none  &none  &none  &none  &bootloader
&sys_reset   &none            &none            &none            &none            &none            &bt_2  &bt_3  &none           &none  &none  &none  &none  &none  &none  &none  &none  &sys_reset
&none        &none            &none            &none            &none                             &bt_0  &bt_1  &out OUT_USB    &none  &none  &none         &none  &none  &none  &none  &none
        >;
    };
};

};
